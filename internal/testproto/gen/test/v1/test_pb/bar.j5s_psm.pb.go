// Code generated by protoc-gen-go-psm. DO NOT EDIT.

package test_pb

import (
	context "context"
	fmt "fmt"
	psm_j5pb "github.com/pentops/j5/gen/j5/state/v1/psm_j5pb"
	psm "github.com/pentops/protostate/psm"
	sqrlx "github.com/pentops/sqrlx.go/sqrlx"
)

// PSM BarPSM

type BarPSM = psm.StateMachine[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
]

type BarPSMDB = psm.DBStateMachine[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
]

type BarPSMEventSpec = psm.EventSpec[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
]

type BarPSMEventKey = string

const (
	BarPSMEventNil     BarPSMEventKey = "<nil>"
	BarPSMEventCreated BarPSMEventKey = "created"
	BarPSMEventUpdated BarPSMEventKey = "updated"
	BarPSMEventDeleted BarPSMEventKey = "deleted"
)

// EXTEND BarKeys with the psm.IKeyset interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarKeys) PSMIsSet() bool {
	return msg != nil
}

// PSMFullName returns the full name of state machine with package prefix
func (msg *BarKeys) PSMFullName() string {
	return "test.v1.bar"
}
func (msg *BarKeys) PSMKeyValues() (map[string]string, error) {
	keyset := map[string]string{
		"bar_id":       msg.BarId,
		"bar_other_id": msg.BarOtherId,
	}
	return keyset, nil
}

// EXTEND BarState with the psm.IState interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarState) PSMIsSet() bool {
	return msg != nil
}

func (msg *BarState) PSMMetadata() *psm_j5pb.StateMetadata {
	if msg.Metadata == nil {
		msg.Metadata = &psm_j5pb.StateMetadata{}
	}
	return msg.Metadata
}

func (msg *BarState) PSMKeys() *BarKeys {
	return msg.Keys
}

func (msg *BarState) SetStatus(status BarStatus) {
	msg.Status = status
}

func (msg *BarState) SetPSMKeys(inner *BarKeys) {
	msg.Keys = inner
}

func (msg *BarState) PSMData() *BarData {
	if msg.Data == nil {
		msg.Data = &BarData{}
	}
	return msg.Data
}

// EXTEND BarData with the psm.IStateData interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarData) PSMIsSet() bool {
	return msg != nil
}

// EXTEND BarEvent with the psm.IEvent interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarEvent) PSMIsSet() bool {
	return msg != nil
}

func (msg *BarEvent) PSMMetadata() *psm_j5pb.EventMetadata {
	if msg.Metadata == nil {
		msg.Metadata = &psm_j5pb.EventMetadata{}
	}
	return msg.Metadata
}

func (msg *BarEvent) PSMKeys() *BarKeys {
	return msg.Keys
}

func (msg *BarEvent) SetPSMKeys(inner *BarKeys) {
	msg.Keys = inner
}

// PSMEventKey returns the BarPSMEventPSMEventKey for the event, implementing psm.IEvent
func (msg *BarEvent) PSMEventKey() BarPSMEventKey {
	tt := msg.UnwrapPSMEvent()
	if tt == nil {
		return BarPSMEventNil
	}
	return tt.PSMEventKey()
}

// UnwrapPSMEvent implements psm.IEvent, returning the inner event message
func (msg *BarEvent) UnwrapPSMEvent() BarPSMEvent {
	if msg == nil {
		return nil
	}
	if msg.Event == nil {
		return nil
	}
	switch v := msg.Event.Type.(type) {
	case *BarEventType_Created_:
		return v.Created
	case *BarEventType_Updated_:
		return v.Updated
	case *BarEventType_Deleted_:
		return v.Deleted
	default:
		return nil
	}
}

// SetPSMEvent sets the inner event message from a concrete type, implementing psm.IEvent
func (msg *BarEvent) SetPSMEvent(inner BarPSMEvent) error {
	if msg.Event == nil {
		msg.Event = &BarEventType{}
	}
	switch v := inner.(type) {
	case *BarEventType_Created:
		msg.Event.Type = &BarEventType_Created_{Created: v}
	case *BarEventType_Updated:
		msg.Event.Type = &BarEventType_Updated_{Updated: v}
	case *BarEventType_Deleted:
		msg.Event.Type = &BarEventType_Deleted_{Deleted: v}
	default:
		return fmt.Errorf("invalid type %T for BarEventType", v)
	}
	return nil
}

type BarPSMEvent interface {
	psm.IInnerEvent
	PSMEventKey() BarPSMEventKey
}

// EXTEND BarEventType_Created with the BarPSMEvent interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarEventType_Created) PSMIsSet() bool {
	return msg != nil
}

func (*BarEventType_Created) PSMEventKey() BarPSMEventKey {
	return BarPSMEventCreated
}

// EXTEND BarEventType_Updated with the BarPSMEvent interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarEventType_Updated) PSMIsSet() bool {
	return msg != nil
}

func (*BarEventType_Updated) PSMEventKey() BarPSMEventKey {
	return BarPSMEventUpdated
}

// EXTEND BarEventType_Deleted with the BarPSMEvent interface

// PSMIsSet is a helper for != nil, which does not work with generic parameters
func (msg *BarEventType_Deleted) PSMIsSet() bool {
	return msg != nil
}

func (*BarEventType_Deleted) PSMEventKey() BarPSMEventKey {
	return BarPSMEventDeleted
}

func BarPSMBuilder() *psm.StateMachineConfig[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
] {
	return &psm.StateMachineConfig[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
	]{}
}

func BarPSMMutation[SE BarPSMEvent](cb func(*BarData, SE) error) psm.TransitionMutation[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
	SE,          // Specific event type for the transition
] {
	return psm.TransitionMutation[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
		SE,          // Specific event type for the transition
	](cb)
}

type BarPSMHookBaton = psm.HookBaton[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
]

func BarPSMLogicHook[SE BarPSMEvent](cb func(context.Context, BarPSMHookBaton, *BarState, SE) error) psm.TransitionLogicHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
	SE,          // Specific event type for the transition
] {
	return psm.TransitionLogicHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
		SE,          // Specific event type for the transition
	](cb)
}
func BarPSMDataHook[SE BarPSMEvent](cb func(context.Context, sqrlx.Transaction, *BarState, SE) error) psm.TransitionDataHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
	SE,          // Specific event type for the transition
] {
	return psm.TransitionDataHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
		SE,          // Specific event type for the transition
	](cb)
}
func BarPSMLinkHook[SE BarPSMEvent, DK psm.IKeyset, DIE psm.IInnerEvent](
	linkDestination psm.LinkDestination[DK, DIE],
	cb func(context.Context, *BarState, SE, func(DK, DIE)) error,
) psm.LinkHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
	SE,          // Specific event type for the transition
	DK,          // Destination Keys
	DIE,         // Destination Inner Event
] {
	return psm.LinkHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
		SE,          // Specific event type for the transition
		DK,          // Destination Keys
		DIE,         // Destination Inner Event
	]{
		Derive:      cb,
		Destination: linkDestination,
	}
}
func BarPSMGeneralLogicHook(cb func(context.Context, BarPSMHookBaton, *BarState, *BarEvent) error) psm.GeneralLogicHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
] {
	return psm.GeneralLogicHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
	](cb)
}
func BarPSMGeneralStateDataHook(cb func(context.Context, sqrlx.Transaction, *BarState) error) psm.GeneralStateDataHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
] {
	return psm.GeneralStateDataHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
	](cb)
}
func BarPSMGeneralEventDataHook(cb func(context.Context, sqrlx.Transaction, *BarState, *BarEvent) error) psm.GeneralEventDataHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
] {
	return psm.GeneralEventDataHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
	](cb)
}
func BarPSMEventPublishHook(cb func(context.Context, psm.Publisher, *BarState, *BarEvent) error) psm.EventPublishHook[
	*BarKeys,    // implements psm.IKeyset
	*BarState,   // implements psm.IState
	BarStatus,   // implements psm.IStatusEnum
	*BarData,    // implements psm.IStateData
	*BarEvent,   // implements psm.IEvent
	BarPSMEvent, // implements psm.IInnerEvent
] {
	return psm.EventPublishHook[
		*BarKeys,    // implements psm.IKeyset
		*BarState,   // implements psm.IState
		BarStatus,   // implements psm.IStatusEnum
		*BarData,    // implements psm.IStateData
		*BarEvent,   // implements psm.IEvent
		BarPSMEvent, // implements psm.IInnerEvent
	](cb)
}
func BarPSMUpsertPublishHook(cb func(context.Context, psm.Publisher, *BarState) error) psm.UpsertPublishHook[
	*BarKeys,  // implements psm.IKeyset
	*BarState, // implements psm.IState
	BarStatus, // implements psm.IStatusEnum
	*BarData,  // implements psm.IStateData
] {
	return psm.UpsertPublishHook[
		*BarKeys,  // implements psm.IKeyset
		*BarState, // implements psm.IState
		BarStatus, // implements psm.IStatusEnum
		*BarData,  // implements psm.IStateData
	](cb)
}

func (event *BarEvent) EventPublishMetadata() *psm_j5pb.EventPublishMetadata {
	tenantKeys := make([]*psm_j5pb.EventTenant, 0)
	return &psm_j5pb.EventPublishMetadata{
		EventId:   event.Metadata.EventId,
		Sequence:  event.Metadata.Sequence,
		Timestamp: event.Metadata.Timestamp,
		Cause:     event.Metadata.Cause,
		Auth: &psm_j5pb.PublishAuth{
			TenantKeys: tenantKeys,
		},
	}
}
